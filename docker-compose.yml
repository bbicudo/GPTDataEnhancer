services:
  application:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: application
    networks:
      - app-network
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - DB_HOST=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - YOUR_AI_API_KEY=${YOUR_AI_API_KEY}
      - YOUR_AI_API_URL=${YOUR_AI_API_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_URL=${OPENAI_API_URL}
    env_file:
      - .env
    depends_on:
      - mysql
    volumes:
      - /home/brunobb/GPTDataEnhancer:/app
    working_dir: /app
    command: mvn spring-boot:run -X
    restart: always

  clean_install:
    build:
      context: .
    volumes:
      - /home/brunobb/GPTDataEnhancer:/app
    working_dir: /app
    command: mvn clean install

  restart:
    build:
      context: .
    volumes:
      - /home/brunobb/GPTDataEnhancer:/app
    working_dir: /app
    command: mvn spring-boot:run -X

  mysql:
    image: mysql:8.0
    container_name: ${DB_HOSTNAME}
    restart: always
    networks:
      - app-network
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 6
      start_period: 30s
      timeout: 10s

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge